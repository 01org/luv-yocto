#!/bin/sh
#
# Copyright 2014 Intel Corporation; author Ricardo Neri
#
# This script analyzes the dmesg buffer looking for messages generated by the
# kernel that might indicate that it has found potential UEFI firmware bugs.

# Search the kmsg buffer for the pattern in PTTRN. If found, print 3 lines
# before and after the message. Also, print the test name, its description
# as well as whether the test failed (PTTRN found) or passed (PTTRN not found).
test_dmesg()
{
    TESTN=${1}
    DESC=${2}
    PTTRN=${3}

    echo "Test: ${TESTN}"
    echo "Description: ${DESC}"
    errs=`dmesg | grep -c "${PTTRN}"`
    if [ $errs -gt 0 ]; then
        echo "FAIL: Found $errs instances of \"${PTTRN}\"."
        echo "Related kernel information"
        echo "----------------------------------------------------------"
        dmesg | grep -A 3 -B 3 "${PTTRN}"
        echo "----------------------------------------------------------"
    else
       echo "PASS: Pattern \"${PTTRN}\" not found."
    fi

}

# First, check if the dmesg buffer is complete

dmesg | grep -q "Linux version"
if [ $? -ne 0 ]; then
    echo "Warning: Dmesg buffer may have been wrapped around"
fi


# Check if the kernel had to fixup page faults caused by the firmware accessing
# BOOT_SERVICES_DATA/CODE memory regions after ExitBootServices() has been called
# kernel message we use to find the illegal accesses:
#            efi: Fixing illegal access to BOOT_SERVICES_*. Bug in EFI firmware?

TEST="EFI_BOOT_SERVICES_*_illegal_access"
PTTRN="efi: Fixing illegal access to BOOT_SERVICES_\*. Bug in EFI firmware?"
DESC="Check for illegal accesses to BOOT_SERVICES_* memory regions."

test_dmesg "${TEST}" "${DESC}" "${PTTRN}"

# Check if the kernel has issued messages about potential firmware bugs. The kernel
# issues these messaages for definite and high priority bugs.

TEST="Kernel_FW_BUG"
PTTRN="\[Firmware Bug\]"
DESC="Check for potential firmware bugs discovered by the Linux kernel."

test_dmesg "${TEST}" "${DESC}" "${PTTRN}"

# Check if the kernel has issued warning messages about the firmware. This level of
# warning is ussed potentially unclear situations (kernel or firmware to blame?)
# Also used for medium priority bugs.

TEST="Kernel_FW_WARN"
PTTRN="\[Firmware Warn\]"
DESC="Check for warnings issued by the Linux kernel about the firmware."

test_dmesg "${TEST}" "${DESC}" "${PTTRN}"

# Check if the kernel has issued info messages warning about the firmware. This used
# to inform about suspicious situations that don't compromise the stability of the
# system.

TEST="Kernel_FW_INFO"
PTTRN="\[Firmware Info\]"
DESC="Check for informative messages issued by the Linux kernel about the firmware."

test_dmesg "${TEST}" "${DESC}" "${PTTRN}"
