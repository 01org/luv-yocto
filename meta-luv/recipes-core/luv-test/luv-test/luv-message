#!/bin/bash
#
# Copyright 2018 Intel Corporation; author Megha Dey
#
LUVDEBUG_LOG=/tmp/luv-debug.log

setup_netconsole()
{
    # Check if user requested netconsole
    net_param=$(luv-netconsole-params)
    net_param_port=$(echo $net_param | tail -1 | awk '{print $2}')
    net_param_ip=$(echo $net_param | tail -1 | awk '{print $1}')

    if [[ $net_param_port =~ ^[0-9]+$ ]] && ! [[ $net_param_ip =~ ^[0-9]+$ ]] ; then
        echo "$0 is testing network for netconsole" > /dev/udp/$net_param_ip/$net_param_port
        if [ $? -eq 0 ]; then
	    NETWORK_READY="1"
        else
            luv_msg_write "Netconsole failed, skipping..."
       fi
    fi
}

setup_debug_log()
{
    debug=`grep -o "luv.debug=[1-3]" /proc/cmdline`
    if [ ! -z $debug ]; then
        dbg_lvl=`echo $debug | cut -d'=' -f 2`
        luv_msg_write "Enable LUV debug level $dbg_lvl..."
        LUVDEBUG="$dbg_lvl"
        [ $dbg_lvl -ge 2 ] && set -v
        [ $dbg_lvl -eq 3 ] && set -x
    fi
}

setup_output()
{
    thistty=$(tty)

    if [ ! -z ${LUVDEBUG} ]; then
        logfiles="${thistty} ${LUVDEBUG_LOG}"
    else
        logfiles="${thistty}"
    fi

    if [ ! -z ${NETWORK_READY} ]; then
        exec 3>/dev/udp/$net_param_ip/$net_param_port
        exec &> >(tee -a ${logfiles} >&3)
    else
        exec &> >(tee -a ${logfiles})
    fi
}

print_line()
{
    while read line ; do
    case $line in
        *+* )
        echo "[    `cut -d " " -f 1 /proc/uptime`0000]  $line"
        ;;
        * )
        echo "[    `cut -d " " -f 1 /proc/uptime`0000] $line"
        ;;
    esac
    done
}

luv_msg_write() {
    /bin/plymouth display-message --text="$1"

    if [ $# == 2 ]; then
         sleep $2
         luv_msg_hide $1
    fi

    echo "$1" | print_line
}

luv_msg_hide() {
    /bin/plymouth hide-message --text="$1"
}

setup_debug_log
setup_netconsole
setup_output
