#!/bin/sh
#
# Parse the output of chipsec and write a luv-test-manager compatible
# log to stdout.

sed 's/\x1B\[[0-9][0-9]*m//g' |

awk ' /\[\+\] imported/ {
	test_strs[$3] = 1;
}

/\[\*\] SKIPPED/ {
	"date +%H:%M:%S:%N" | getline current_time;
	close ("date +%H:%M:%S:%N")
	if (test_strs[$3]) {
		printf("1.1 %s chipsec %s RESULT 0 0 0 1 0\r\n", current_time, $3);
		fflush("");
	}
}

/^ERROR/ {
	"date +%H:%M:%S:%N" | getline current_time;
	close ("date +%H:%M:%S:%N")
	if (test_strs[$2] && !error_strs[$2]) {
		printf("1.1 %s chipsec %s RESULT 0 0 0 0 1\r\n", current_time, $2);
		fflush("");
		error_strs[$2] = 1;
	}
}

/\[\!\] WARNING/ {
	"date +%H:%M:%S:%N" | getline current_time;
	close ("date +%H:%M:%S:%N")
	if (test_strs[$3]) {
		printf("1.1 %s chipsec %s RESULT 0 0 0 0 1\r\n", current_time, $3);
		fflush("");
	}
}

/\[\-\] FAILED/ {
	"date +%H:%M:%S:%N" | getline current_time;
	close ("date +%H:%M:%S:%N")
	if (test_strs[$3]) {
		printf("1.1 %s chipsec %s RESULT 0 1 0 0 0\r\n", current_time, $3);
		fflush("");
	}
}

/\[\+\] PASSED/ {
	"date +%H:%M:%S:%N" | getline current_time;
	close ("date +%H:%M:%S:%N")
	if (test_strs[$3]) {
		printf("1.1 %s chipsec %s RESULT 1 0 0 0 0\r\n", current_time, $3);
		fflush("");
	}
}'
